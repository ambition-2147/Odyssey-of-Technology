// why var? it's a rhino problem

var $ItemRecipeCapability = Java.loadClass("com.gregtechceu.gtceu.api.capability.recipe.ItemRecipeCapability");
var $IO = Java.loadClass("com.gregtechceu.gtceu.api.capability.recipe.IO");
var $GTRecipeType = Java.loadClass("com.gregtechceu.gtceu.api.recipe.GTRecipeType");

var $ItemStack = Java.loadClass("net.minecraft.world.item.ItemStack");

var V_TIER = GTValues.UHV;
var EU_T = GTValues.VA[V_TIER];
var DURATION = 20;

var ReplicatorRecipeLogic = new JavaAdapter($GTRecipeType.ICustomRecipeLogic, {
    /**
     * @param {Internal.IRecipeCapabilityHolder} holder
     * @returns {Internal.GTRecipe | null}
     */
    createCustomRecipe(holder) {
        /** @type {Internal.ArrayList<Internal.IRecipeHandler>} */
        var itemhandlers = holder.getCapabilitiesFlat($IO.IN, $ItemRecipeCapability.CAP);
        // inputsの配列(スロット別)を取得
        /** @type {Internal.Optional<Internal.ItemStack>} */
        var toReplicate = itemhandlers
            .stream()
            .filter(x => x.shouldSearchContent())
            .flatMap(container => {
                return container
                    .getContents()
                    .stream()
                    .filter(x => $ItemStack.__javaObject__.isInstance(x))
                    .map(x => $ItemStack.__javaObject__.cast(x))
                    .filter(s => !s.isEmpty());
            })
            // 最初の1つだけ取得 JavaはめんどくさいのでJS式のやり方
            .toArray()[0];

        if (!toReplicate) {
            return null;
        }

        return GTRecipeTypes.get("replicator")
            ["recipeBuilder(java.lang.String,java.lang.Object[])"]("gtceu:replicator")
            ["notConsumable(net.minecraft.world.item.ItemStack)"](toReplicate)
            ["inputFluids(net.minecraftforge.fluids.FluidStack)"](Fluid.of("gtceu:uu_matter", 100))
            .duration(DURATION)
            .EUt(EU_T)
            ["outputItems(net.minecraft.world.item.ItemStack)"](Item.of(toReplicate, 1))
            .buildRawRecipe();
    },
    // 動いて欲しかった
    // buildRepresentativeRecipes() {
    //     var to_replicate = Item.of("minecraft:grass_block");
    //     to_replicate.setHoverName(Component.translatable("kubejs.replicator.replicate_from"));

    //     var result_replicate = Item.of("minecraft:grass_block");
    //     result_replicate.setHoverName(Component.translatable("kubejs.replicator.replicate_to"));
    //     var replicatorRecipeType = GTRecipeTypes.get("replicator");
    //     var recipe = replicatorRecipeType["recipeBuilder(java.lang.String)"]("gtceu:replicator")
    //         ["notConsumable(net.minecraft.world.item.ItemStack)"](to_replicate)
    //         ["inputFluids(net.minecraftforge.fluids.FluidStack)"](Fluid.of("gtceu:uu_matter", 100))
    //         .duration(DURATION)
    //         .EUt(EU_T)
    //         ["outputItems(net.minecraft.world.item.ItemStack)"](result_replicate)
    //         .buildRawRecipe();

    //     recipe.setId(recipe.getId().withPrefix("/"));

    //     replicatorRecipeType.addToMainCategory(recipe);
    // },
});

GTCEuStartupEvents.registry("gtceu:machine", event => {
    // very dirty hack to register custom recipe logic
    GTRecipeTypes.get("matter_replicator").addCustomRecipeLogic(ReplicatorRecipeLogic);
    event
        .create("matter_replicator", "multiblock")
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes("replicator")
        .recipeModifiers([
            GTRecipeModifiers.OC_NON_PERFECT,
            GTRecipeModifiers.BATCH_MODE,
            GTRecipeModifiers.PARALLEL_HATCH,
        ])
        .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
        .pattern(definition =>
            FactoryBlockPattern.start()
                .aisle
  .aisle
  .aisle('_____________________','_____________________','_____________________','_____________________','_____________________','_______G_____G_______','_____________________','______GG_____GG______','_____________________','___G_____________G___','_____________________','___G_____________G___','_____________________','______GG_____GG______','_____________________','_______G_____G_______','_____________________','_____________________','_____________________','_____________________','_____________________')
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
            .where('S', Predicates.controller(Predicates.blocks(definition.get())))
            .where('G', Predicates.blocks('kubejs:gate_casing'))
            .where('O', Predicates.blocks('gtceu:max_output_bus'))
            .where('E', Predicates.blocks('kubejs:gate_energy_transmitter'))
            .where('H', Predicates.blocks('gtceu:max_substation_input_hatch_64a'))
            .where('L', Predicates.blocks('gtceu:ulv_input_bus'))
            .where('_', Predicates.any()) // 必要に応じて追加
            .where(' ', Predicates.any()) // 既存
            .where('#', Predicates.air())
                .build()
        )

        .workableCasingRenderer("gtceu:block/casings/voltage/max/top",
            "gtceu:block/multiblock/assembly_line", false)
            });

GTCEuStartupEvents.registry(
    "gtceu:recipe_type",
    /**
     *
     * @param {Internal.GTRegistryEventJS<any, Internal.GTRecipeType>} event
     */
    event => {
        event
            .create("replicator")
            .category("multiblock")
            .setEUIO("in")
            .setMaxIOSize(1, 1, 1, 0)
            .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
            .setSound(GTSoundEntries.COMPUTATION)
            .setMaxTooltips(6);
    }
);
