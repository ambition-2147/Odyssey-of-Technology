GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('matter_fabricator', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes([GTRecipeTypes.get('replicator'),GTRecipeTypes.get('deconstructor')])
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_NON_PERFECT])
        .appearanceBlock(GCYMBlocks.CASING_ATOMIC)
        .pattern(definition => FactoryBlockPattern.start()
  .aisle('_____________________','_____________________','_____________________','_____________________','_____________________','_____________________','__________G__________','__________G__________','__________G__________','_________2G2_________','_____GGGGGHGGGGG_____','_________2G2_________','__________G__________','__________G__________','__________G__________','_____________________','_____________________','_____________________','_____________________','_____________________','_____________________')
  .aisle
  .aisle
  .aisle
  .aisle('_____________________','_________G_G_________','_________G_G_________','_____________________','_____________________','_____________________','_____________________','_____________________','___G_____________G___','_____________________','_____________________','_____________________','___G_____________G___','_____________________','_____________________','_____________________','_____________________','_____________________','_________G_G_________','_________G_G_________','_____________________')
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle
  .aisle('_____________________','_____________________','_____________________','_____________________','_____________________','_____________________','__________G__________','__________G__________','__________E__________','_________OGO_________','_____GGGEGSGEGGG_____','_________OGO_________','__________E__________','__________G__________','__________G__________','_____________________','_____________________','_____________________','_____________________','_____________________','_____________________')
            .where('S', Predicates.controller(Predicates.blocks(definition.get())))
            .where('G', Predicates.blocks('kubejs:matter_casing').or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
            .where('O', Predicates.blocks('gtceu:me_output_bus'))
            .where('E', Predicates.blocks('kubejs:matter_energy_transmitter'))
            .where('2', Predicates.blocks('gtceu:me_output_hatch'))
            .where('F', Predicates.blocks('gtceu:me_input_hatch'))
            .where('H', Predicates.blocks('gtceu:max_substation_input_hatch_64a'))
            .where('L', Predicates.blocks('gtceu:ulv_input_bus'))
            .where('_', Predicates.any()) // 必要に応じて追加
            .where(' ', Predicates.any()) // 既存
            .where('#', Predicates.air())
            .build())
        .workableCasingRenderer("gtceu:block/casings/voltage/max/top",
            "gtceu:block/multiblock/assembly_line", false)
            });

